#ifndef __player_H_
#define __player_H_


#include <ngl/Vec2.h>
#include <QMouseEvent>
#include <ngl/Camera.h>
#include <ngl/NGLInit.h>
#include <QKeyEvent>

/// \Michael Woods
/// \version 1.0
/// \Cell
/// \This is the class for the player, stores information for the first person camera
///
///
///
class player
{
  public:
  void camera_position();

  private:


  //----------------------------------------------------------------------------------------------------------------------
  /// @brief a container for our Cameras

  //----------------------------------------------------------------------------------------------------------------------
  std::vector <ngl::Camera > m_cam;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief fov value for the camera
  //----------------------------------------------------------------------------------------------------------------------
  float m_fov;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief aspect ratio of the camera
  //----------------------------------------------------------------------------------------------------------------------
  float m_aspect;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Qt Event called when a key is pressed
  /// @param [in] _event the Qt event to query for size etc
  //----------------------------------------------------------------------------------------------------------------------
  void keyPressEvent(QKeyEvent *_event);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief an index into the active camera list
  //----------------------------------------------------------------------------------------------------------------------
  int m_cameraIndex;



}; // end of class

#endif //end include guard
